{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "myDataFac101"
		},
		"HDInsightLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HDInsightLinkedService'"
		},
		"MyLocalFileSystem_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'MyLocalFileSystem'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"ADLSGen2LinkedServKeyVault_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mydatalake101.dfs.core.windows.net"
		},
		"HDInsightLinkedService_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "admin101"
		},
		"MyLocalFileSystem_properties_typeProperties_host": {
			"type": "string",
			"defaultValue": "C:\\Azure Datalake\\Output\\SQLServer"
		},
		"MyLocalFileSystem_properties_typeProperties_userId": {
			"type": "string",
			"defaultValue": "Satan Romeo"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DatasetCovidJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "data.json",
						"folderPath": "dumpCovidData",
						"fileSystem": "mystaging101"
					}
				},
				"schema": {
					"type": "object",
					"properties": {
						"raw_data": {
							"type": "array",
							"items": {
								"type": "object",
								"properties": {
									"agebracket": {
										"type": "string"
									},
									"contractedfromwhichpatientsuspected": {
										"type": "string"
									},
									"currentstatus": {
										"type": "string"
									},
									"dateannounced": {
										"type": "string"
									},
									"detectedcity": {
										"type": "string"
									},
									"detecteddistrict": {
										"type": "string"
									},
									"detectedstate": {
										"type": "string"
									},
									"entryid": {
										"type": "string"
									},
									"gender": {
										"type": "string"
									},
									"nationality": {
										"type": "string"
									},
									"notes": {
										"type": "string"
									},
									"numcases": {
										"type": "string"
									},
									"patientnumber": {
										"type": "string"
									},
									"source1": {
										"type": "string"
									},
									"source2": {
										"type": "string"
									},
									"source3": {
										"type": "string"
									},
									"statecode": {
										"type": "string"
									},
									"statepatientnumber": {
										"type": "string"
									},
									"statuschangedate": {
										"type": "string"
									},
									"typeoftransmission": {
										"type": "string"
									}
								}
							}
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetCovidStructured')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "data.csv",
						"folderPath": "dumpCovidData",
						"fileSystem": "mystaging101"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedTextADL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "FactTransactionADL.txt",
						"folderPath": "transaction_data",
						"fileSystem": "mystaging101"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_71n')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "transaction_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "product_key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "order_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "actual_cost",
						"type": "decimal",
						"precision": 18,
						"scale": 0
					}
				],
				"typeProperties": {
					"schema": "prod",
					"table": "FactTransactionHistoryADF"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DestinationMigrated_ParquetDim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_fileName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().cw_fileName",
							"type": "Expression"
						},
						"folderPath": "dimensions",
						"fileSystem": "mytarget101"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FromAWSToDataLake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "fromAWS3",
						"fileSystem": "mystaging101"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/InputBlobData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"fileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().fileName",
							"type": "Expression"
						},
						"folderPath": "sampledata",
						"fileSystem": "mystaging101"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKPLoadPath')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OutputDatabase",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "tableName",
						"type": "varchar"
					},
					{
						"name": "fileName",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataLoadLKP"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LKPTablesForSynapse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OutputDatabase",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ProcessingSQLDWH"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "TableName",
						"type": "varchar"
					},
					{
						"name": "LoadType",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RefLookupSQLDWTableMig"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MigAzureSQLDatabaseTGT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OutputDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableName": {
						"type": "string",
						"defaultValue": "dbo.DimCurrency"
					}
				},
				"folder": {
					"name": "OnPremiseDBMigration"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@substring(dataset().TableName, 0,3)",
						"type": "Expression"
					},
					"table": {
						"value": "@substring(dataset().TableName, 4, sub(length(dataset().TableName), 4))",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MigDataLakeSTGFolder')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OnPremiseDBMigration"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "stg_migADWorks",
						"fileSystem": "mystaging101"
					},
					"compressionCodec": "snappy"
				},
				"schema": [
					{
						"name": "DBVersion",
						"type": "UTF8"
					},
					{
						"name": "VersionDate",
						"type": "INT96"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MigDataLakeStoreWithinAvg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableSchema": {
						"type": "string",
						"defaultValue": "dummy"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "dummy"
					}
				},
				"folder": {
					"name": "OnPremiseDBMigration"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@{concat(dataset().TableSchema,'.',dataset().TableName)}/@{concat(dataset().TableName,'_', formatDateTime(utcnow(),'yyyyMMdd'),'.parquet')}",
							"type": "Expression"
						},
						"folderPath": "stg_migADWorks",
						"fileSystem": "mystaging101"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OutputSQLTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OutputDatabase",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tableName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"table": {
						"value": "@dataset().tableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/STGADLSIncremental')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "ProcessingIncrSQLDWH"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "raw.parquet",
							"type": "Expression"
						},
						"folderPath": "incremental/FactInternetSales",
						"fileSystem": "mystaging101"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDatasetBlobStore')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FileTransactionHistory.txt",
						"folderPath": "FTH",
						"container": "my-demo-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSGen2LinkedServKeyVault')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ADLSGen2LinkedServKeyVault_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "MyADFKeyVaultLinkedService",
							"type": "LinkedServiceReference"
						},
						"secretName": "MyAzureDataLakeSecret"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HDInsightLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://MyHDInsCluster.azurehdinsight.net",
					"userName": "[parameters('HDInsightLinkedService_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HDInsightLinkedService_password')]"
					},
					"isEspEnabled": false,
					"fileSystem": "filesystemhive",
					"linkedServiceName": {
						"referenceName": "HDInsBlobLinkedService",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MyLocalFileSystem')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "FileServer",
				"typeProperties": {
					"host": "[parameters('MyLocalFileSystem_properties_typeProperties_host')]",
					"userId": "[parameters('MyLocalFileSystem_properties_typeProperties_userId')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('MyLocalFileSystem_password')]"
					}
				},
				"connectVia": {
					"referenceName": "integrationRuntimeSelfHosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "integrationRuntimeSelfHosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADLSLocal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sampledata",
						"fileSystem": "mystaging101"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "VendorID",
						"type": "String"
					},
					{
						"name": "tpep_pickup_datetime",
						"type": "String"
					},
					{
						"name": "tpep_dropoff_datetime",
						"type": "String"
					},
					{
						"name": "passenger_count",
						"type": "String"
					},
					{
						"name": "trip_distance",
						"type": "String"
					},
					{
						"name": "RatecodeID",
						"type": "String"
					},
					{
						"name": "store_and_fwd_flag",
						"type": "String"
					},
					{
						"name": "PickupLocationId",
						"type": "String"
					},
					{
						"name": "DropLocationId",
						"type": "String"
					},
					{
						"name": "payment_type",
						"type": "String"
					},
					{
						"name": "fare_amount",
						"type": "String"
					},
					{
						"name": "extra",
						"type": "String"
					},
					{
						"name": "mta_tax",
						"type": "String"
					},
					{
						"name": "tip_amount",
						"type": "String"
					},
					{
						"name": "tolls_amount",
						"type": "String"
					},
					{
						"name": "improvement_surcharge",
						"type": "String"
					},
					{
						"name": "total_amount",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		}
	]
}