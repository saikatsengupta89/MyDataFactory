{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "myDataFac101"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/CopyFactTxnData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_71n",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "my-demo-container/FTH/FileTransactionHistory.txt"
							},
							{
								"name": "Destination",
								"value": "prod.FactTransactionHistoryADF"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "my-demo-container",
								"enableCompression": false
							},
							"enableSkipIncompatibleRow": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "transaction_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "product_key",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "order_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "quantity",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDatasetBlobStore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_71n",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-06-19T14:11:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFromBlobToDataLakeToDWH')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_from_blob_store_to_data_lake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 1
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 2
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 3
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"type": "String",
											"physicalType": "String",
											"ordinal": 4
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDatasetBlobStore",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DelimitedTextADL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "copy_from_data_lake_to_SQL_DWH",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Copy_from_blob_store_to_data_lake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "my-demo-container/FTH"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"type": "String",
											"ordinal": 1
										},
										"sink": {
											"name": "transaction_id",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 2
										},
										"sink": {
											"name": "product_key",
											"type": "Int32"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 3
										},
										"sink": {
											"name": "order_date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"type": "String",
											"ordinal": 4
										},
										"sink": {
											"name": "quantity",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "DelimitedTextADL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSynapseAnalyticsTable1",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-06-23T12:44:17Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyParameterizedData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline will copy data from blob to target SQL DB dynamically into multiple target tables changing parameter value dynamically",
				"activities": [
					{
						"name": "GetFileAndTableName",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LKPLoadPath",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetFileAndTableName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetFileAndTableName').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "SetTableName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "tableName",
										"value": {
											"value": "@item().tableName",
											"type": "Expression"
										}
									}
								},
								{
									"name": "CopyFromGen2ToSQLDB",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "SetTableName",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "SetFileName",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink"
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "InputBlobData",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@variables('fileName')",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "OutputSQLTable",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "@variables('tableName')",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "SetFileName",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "fileName",
										"value": {
											"value": "@item().fileName",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"variables": {
					"fileName": {
						"type": "String",
						"defaultValue": "cars.csv"
					},
					"tableName": {
						"type": "String",
						"defaultValue": "Cars"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-07-05T08:53:57Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ExecuteHiveScript')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HiveScript",
						"type": "HDInsightHive",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "filesystemhive/myhivescripts/hiveScript.hql",
							"scriptLinkedService": {
								"referenceName": "HDInsBlobLinkedService",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HDInsightLinkedService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-19T12:30:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetCovidAPIData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetAPIData",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET"
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings",
									"quoteAllText": true,
									"filePattern": "setOfObjects"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "DatasetCovid",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetCovidJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "TransformJSON",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "GetAPIData",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "FlattenHierarchy"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "$['raw_data'][0]['agebracket']"
										},
										"sink": {
											"type": "String",
											"ordinal": 1
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['contractedfromwhichpatientsuspected']"
										},
										"sink": {
											"type": "String",
											"ordinal": 2
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['currentstatus']"
										},
										"sink": {
											"type": "String",
											"ordinal": 3
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['dateannounced']"
										},
										"sink": {
											"type": "String",
											"ordinal": 4
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['detectedcity']"
										},
										"sink": {
											"type": "String",
											"ordinal": 5
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['detecteddistrict']"
										},
										"sink": {
											"type": "String",
											"ordinal": 6
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['detectedstate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 7
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['entryid']"
										},
										"sink": {
											"type": "String",
											"ordinal": 8
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['gender']"
										},
										"sink": {
											"type": "String",
											"ordinal": 9
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['nationality']"
										},
										"sink": {
											"type": "String",
											"ordinal": 10
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['notes']"
										},
										"sink": {
											"type": "String",
											"ordinal": 11
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['numcases']"
										},
										"sink": {
											"type": "String",
											"ordinal": 12
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['patientnumber']"
										},
										"sink": {
											"type": "String",
											"ordinal": 13
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['source1']"
										},
										"sink": {
											"type": "String",
											"ordinal": 14
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['source2']"
										},
										"sink": {
											"type": "String",
											"ordinal": 15
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['source3']"
										},
										"sink": {
											"type": "String",
											"ordinal": 16
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['statecode']"
										},
										"sink": {
											"type": "String",
											"ordinal": 17
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['statepatientnumber']"
										},
										"sink": {
											"type": "String",
											"ordinal": 18
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['statuschangedate']"
										},
										"sink": {
											"type": "String",
											"ordinal": 19
										}
									},
									{
										"source": {
											"path": "$['raw_data'][0]['typeoftransmission']"
										},
										"sink": {
											"type": "String",
											"ordinal": 20
										}
									}
								],
								"collectionReference": ""
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetCovidJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetCovidStructured",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-20T20:00:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MigrateDataLakeGen2toAzureSQLDB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetADLSFolders",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "MigDataLakeSTGFolder",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true
							}
						}
					},
					{
						"name": "ForEachFolder",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetADLSFolders",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetADLSFolders').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyFromADLSToAzureSQL",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat('stg_migADWorks','/',item().name)",
													"type": "Expression"
												},
												"wildcardFileName": "*.parquet",
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "DROP TABLE IF EXISTS [@{item().name}]",
												"type": "Expression"
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MigDataLakeSTGFolder",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "MigAzureSQLDatabaseTGT",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "LoadAuditData",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopyFromADLSToAzureSQL",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[LoadAuditTable]",
										"storedProcedureParameters": {
											"schemaName": {
												"value": {
													"value": "@substring(item().name, 0,3)",
													"type": "Expression"
												},
												"type": "String"
											},
											"tableName": {
												"value": {
													"value": "@substring(item().name, 4, sub(length(item().name), 4))",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "OutputDatabase",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-06T17:55:13Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MigrateDataLakeToSynapseDBCopy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "GetListOfCopyTables",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select TableName from dbo.RefLookupSQLDWTableMig where LoadType='Copy'",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LKPTablesForSynapse",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachDirectCopy",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetListOfCopyTables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetListOfCopyTables').output.value",
								"type": "Expression"
							},
							"batchCount": 4,
							"activities": [
								{
									"name": "CopyFromSQLDBToSQLDWH",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFolderPath": {
													"value": "@concat('stg_migADWorks','/',item().TableName) ",
													"type": "Expression"
												},
												"wildcardFileName": "*.*",
												"enablePartitionDiscovery": false
											}
										},
										"sink": {
											"type": "SqlDWSink",
											"preCopyScript": {
												"value": "IF OBJECT_ID ('[@{item().TableName}]','U') is not null DROP TABLE [@{item().TableName}];",
												"type": "Expression"
											},
											"allowPolyBase": true,
											"polyBaseSettings": {
												"rejectValue": 0,
												"rejectType": "value",
												"useTypeDefault": true
											},
											"tableOption": "autoCreate",
											"disableMetricsCollection": false
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "MigDataLakeSTGFolder",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "AzureSQLDWH",
											"type": "DatasetReference",
											"parameters": {
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "LoadTransformedDimToSQLDW",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEachDirectCopy",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/saikat.sengupta89.learn_gmail.com#ext#@saikatsengupta89learngmail.onmicrosoft.com/ProcessDimFromDataLakeToSynapseDWH"
						},
						"linkedServiceName": {
							"referenceName": "MyAzureDatabricksLinkedService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-11T09:08:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessDataEventBased')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupList",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LKPLoadPath",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LookupList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LookupList').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "CopyFromDataLakeToSQLDB",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": {
												"value": "TRUNCATE TABLE [@{item().TableName}];",
												"type": "Expression"
											},
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "InputBlobData",
											"type": "DatasetReference",
											"parameters": {
												"fileName": {
													"value": "@item().fileName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "OutputSQLTable",
											"type": "DatasetReference",
											"parameters": {
												"tableName": {
													"value": "@item().tableName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-12T17:50:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/copyFromS3ToDataLake')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FromS3ToDataLake",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "AWS3InputData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "FromAWSToDataLake",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-06-28T12:42:35Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "MyLocalFileSystem",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "FileServerLocation",
						"fileName": "FactProductInventory.txt"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ProductKey",
						"type": "String"
					},
					{
						"name": "DateKey",
						"type": "String"
					},
					{
						"name": "MovementDate",
						"type": "String"
					},
					{
						"name": "UnitCost",
						"type": "String"
					},
					{
						"name": "UnitsIn",
						"type": "String"
					},
					{
						"name": "UnitsOut",
						"type": "String"
					},
					{
						"name": "UnitsBalance",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MigTableListWithinAvg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "OnPremiseDBMigration"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MigTableWithinAvg')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"TableSchema": {
						"type": "string",
						"defaultValue": "dbo"
					},
					"TableName": {
						"type": "string",
						"defaultValue": "DimCurrency"
					}
				},
				"folder": {
					"name": "OnPremiseDBMigration"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().TableSchema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().TableName",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLServerOnPremDB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "On premise SQL Server Database",
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"cw_table": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().cw_table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerLKPCategory')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerSalesData')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServer1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [
					{
						"name": "ProductKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DueDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ShipDateKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PromotionKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CurrencyKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesTerritoryKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SalesOrderNumber",
						"type": "nvarchar"
					},
					{
						"name": "SalesOrderLineNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "RevisionNumber",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "OrderQuantity",
						"type": "smallint",
						"precision": 5
					},
					{
						"name": "UnitPrice",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "ExtendedAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "UnitPriceDiscountPct",
						"type": "float",
						"precision": 15
					},
					{
						"name": "DiscountAmount",
						"type": "float",
						"precision": 15
					},
					{
						"name": "ProductStandardCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TotalProductCost",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "SalesAmount",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "TaxAmt",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "Freight",
						"type": "money",
						"precision": 19,
						"scale": 4
					},
					{
						"name": "CarrierTrackingNumber",
						"type": "nvarchar"
					},
					{
						"name": "CustomerPONumber",
						"type": "nvarchar"
					},
					{
						"name": "OrderDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "DueDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ShipDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "FactInternetSales"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyFilesForEachSalesCategory')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LKPCategory",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[demo].[GetProductCategories]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "SqlServerLKPCategory",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachCategory",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "LKPCategory",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('LKPCategory').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "CopySalesFromOnPremToADLS",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"sqlReaderStoredProcedureName": "[[demo].[GetSales]",
											"storedProcedureParameters": {
												"ProductCategory": {
													"type": "String",
													"value": {
														"value": "@item().Category",
														"type": "Expression"
													}
												}
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "OrderDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"type": "DateTime",
														"ordinal": 1
													}
												},
												{
													"source": {
														"name": "SalesOrderNumber",
														"type": "String",
														"physicalType": "nvarchar"
													},
													"sink": {
														"type": "String",
														"ordinal": 2
													}
												},
												{
													"source": {
														"name": "MaxSalesAmount",
														"type": "Decimal",
														"physicalType": "money"
													},
													"sink": {
														"type": "Decimal",
														"ordinal": 3
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SqlServerSalesData",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ADLSales",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "ProcUpdateDetails",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "CopySalesFromOnPremToADLS",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[demo].[UpdateProcessDetails]",
										"storedProcedureParameters": {
											"Duration": {
												"value": {
													"value": "@activity('CopySalesFromOnPremToADLS').output.copyDuration",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"ProductCategory": {
												"value": {
													"value": "@item().Category",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "SqlServer1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-01T13:22:02Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerLKPCategory')]",
				"[concat(variables('factoryId'), '/datasets/SqlServerSalesData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MigrateOnPremtoDataLakeGen2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Real scenario migration from on-premise database to Azure SQL DB",
				"activities": [
					{
						"name": "GetTableList",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderStoredProcedureName": "[[dbo].[GetMigratedTableListWithinAvgSize]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "MigTableListWithinAvg",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachTable",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "GetTableList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('GetTableList').output.value",
								"type": "Expression"
							},
							"batchCount": 6,
							"activities": [
								{
									"name": "MigrateOntoGen2",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false,
										"parallelCopies": 3,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "MigTableWithinAvg",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@item().TableSchema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "MigDataLakeStoreWithinAvg",
											"type": "DatasetReference",
											"parameters": {
												"TableSchema": {
													"value": "@item().TableSchema",
													"type": "Expression"
												},
												"TableName": {
													"value": "@item().TableName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2020-07-06T12:00:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/MigTableListWithinAvg')]",
				"[concat(variables('factoryId'), '/datasets/MigTableWithinAvg')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Migrate_OnPremSQLDB_to_ADL_Dim')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Migrate Dimensions from on-premise database to ADLS",
				"activities": [
					{
						"name": "ForEach_mt6",
						"type": "ForEach",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@pipeline().parameters.cw_items",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy_mt6",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": "dbo.@{item().source.table}"
										},
										{
											"name": "Destination",
											"value": "mytarget101/dimensions/@{item().destination.fileName}"
										}
									],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"partitionOption": "None"
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "SQLServerOnPremDB",
											"type": "DatasetReference",
											"parameters": {
												"cw_table": "@item().source.table"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DestinationMigrated_ParquetDim",
											"type": "DatasetReference",
											"parameters": {
												"cw_fileName": "@item().destination.fileName"
											}
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"cw_items": {
						"type": "Array",
						"defaultValue": [
							{
								"source": {
									"table": "DimAccount"
								},
								"destination": {
									"fileName": "dim_account.parquet"
								}
							},
							{
								"source": {
									"table": "DimCurrency"
								},
								"destination": {
									"fileName": "dim_currency.parquet"
								}
							},
							{
								"source": {
									"table": "DimCustomer"
								},
								"destination": {
									"fileName": "dim_customer.parquet"
								}
							},
							{
								"source": {
									"table": "DimDate"
								},
								"destination": {
									"fileName": "dim_date.parquet"
								}
							},
							{
								"source": {
									"table": "DimDepartmentGroup"
								},
								"destination": {
									"fileName": "dim_department_group.parquet"
								}
							},
							{
								"source": {
									"table": "DimEmployee"
								},
								"destination": {
									"fileName": "dim_employee.parquet"
								}
							},
							{
								"source": {
									"table": "DimGeography"
								},
								"destination": {
									"fileName": "dim_geography.parquet"
								}
							},
							{
								"source": {
									"table": "DimOrganization"
								},
								"destination": {
									"fileName": "dim_organization.parquet"
								}
							},
							{
								"source": {
									"table": "DimProduct"
								},
								"destination": {
									"fileName": "dim_product.parquet"
								}
							},
							{
								"source": {
									"table": "DimProductCategory"
								},
								"destination": {
									"fileName": "dim_product_category.parquet"
								}
							},
							{
								"source": {
									"table": "DimProductSubcategory"
								},
								"destination": {
									"fileName": "dim_product_subcategory.parquet"
								}
							},
							{
								"source": {
									"table": "DimPromotion"
								},
								"destination": {
									"fileName": "dim_promotion.parquet"
								}
							},
							{
								"source": {
									"table": "DimReseller"
								},
								"destination": {
									"fileName": "dim_reseller.parquet"
								}
							},
							{
								"source": {
									"table": "DimSalesReason"
								},
								"destination": {
									"fileName": "dim_sales_reason.parquet"
								}
							},
							{
								"source": {
									"table": "DimSalesTerritory"
								},
								"destination": {
									"fileName": "dim_sales_territory.parquet"
								}
							}
						]
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-06-23T15:44:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SQLServerOnPremDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessDailySalesAgg')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PassRefreshMonth",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "month_key",
							"value": {
								"value": "@if(equals(formatDateTime(utcnow(),'yyyyMM'), formatDateTime(adddays(utcnow(), -1),'yyyyMM')), formatDateTime(utcnow(),'yyyyMM'), formatDateTime(adddays(utcnow(), -1),'yyyyMM'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MoveMonthlySalesDataFromOnPremToDataLake",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "PassRefreshMonth",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dbo.FactInternetSales"
							},
							{
								"name": "Destination",
								"value": "mytarget101/facts/fact_internet_sales/@{concat('fact_internet_sales_',variables('month_key'),'.parquet')}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from FactInternetSales where cast(SUBSTRING(cast(OrderDateKey as varchar),1, 6) as int) =', variables('month_key'))",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerSalesData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ADLSIncremental_SalesData",
								"type": "DatasetReference",
								"parameters": {
									"month_key": {
										"value": "@variables('month_key')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ProcessMonthlySalesAgg",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "MoveMonthlySalesDataFromOnPremToDataLake",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/saikat.sengupta89.learn_gmail.com#ext#@saikatsengupta89learngmail.onmicrosoft.com/ProcessSalesAggMthly",
							"baseParameters": {
								"month_key": {
									"value": "@variables('month_key')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "MyAzureDatabricksLinkedService",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LoadAuditTableOnSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ProcessMonthlySalesAgg",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LoadAuditSalesAggMthly]",
							"storedProcedureParameters": {
								"message": {
									"value": {
										"value": "@activity('ProcessMonthlySalesAgg').output.runOutput",
										"type": "Expression"
									},
									"type": "String"
								},
								"month_key": {
									"value": {
										"value": "@variables('month_key')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LoadAuditTableOnFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ProcessMonthlySalesAgg",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[LoadAuditSalesAggMthly]",
							"storedProcedureParameters": {
								"message": {
									"value": {
										"value": "@activity('ProcessMonthlySalesAgg').output.runOutput",
										"type": "Expression"
									},
									"type": "String"
								},
								"month_key": {
									"value": {
										"value": "@variables('month_key')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "SqlServer1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"month_key": {
						"type": "String",
						"defaultValue": "201912"
					},
					"pipelineName": {
						"type": "String",
						"defaultValue": "Sales01 - Daily Incremental Sales"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-07-21T16:58:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerSalesData')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ProcessDailySalesToSQLDW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PassRefreshMonth",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "MONTH_KEY",
							"value": {
								"value": "@if(equals(formatDateTime(utcnow(),'yyyyMM'), formatDateTime(adddays(utcnow(), -1),'yyyyMM')), formatDateTime(utcnow(),'yyyyMM'), formatDateTime(adddays(utcnow(), -1),'yyyyMM'))",
								"type": "Expression"
							}
						}
					},
					{
						"name": "MoveSalesDataToDataLakeStage",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "PassRefreshMonth",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": {
									"value": "@concat('select * from FactInternetSales where cast(SUBSTRING(cast(OrderDateKey as varchar),1, 6) as int) =', variables('MONTH_KEY'))",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "ParquetSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SqlServerSalesData",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "STGADLSIncremental",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "MoveFromADLSToSQLDW",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "MoveSalesDataToDataLakeStage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ParquetSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": {
									"value": "@{concat('DELETE FROM FactInternetSales where cast(SUBSTRING(cast(OrderDateKey as varchar),1, 6) as int) =', variables('MONTH_KEY'))}",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "STGADLSIncremental",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQLDWH",
								"type": "DatasetReference",
								"parameters": {
									"TableName": {
										"value": "@variables('TABLE_NAME')",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "DeleteAggBeforeLoad",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "MoveFromADLSToSQLDW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DeleteFromSalesAgg]",
							"storedProcedureParameters": {
								"MonthKey": {
									"value": {
										"value": "@variables('MONTH_KEY')",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSynapseDWH",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LoadTransformedAgg",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "DeleteAggBeforeLoad",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/saikat.sengupta89.learn_gmail.com#ext#@saikatsengupta89learngmail.onmicrosoft.com/ProcessDailyAggIntoSQLDW",
							"baseParameters": {
								"MONTH_KEY": {
									"value": "@variables('MONTH_KEY')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "MyAzureDatabricksLinkedService",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"MONTH_KEY": {
						"type": "String",
						"defaultValue": "202006"
					},
					"TABLE_NAME": {
						"type": "String",
						"defaultValue": "dbo.FactInternetSales"
					}
				},
				"annotations": [],
				"lastPublishTime": "2020-07-10T23:35:15Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SqlServerSalesData')]"
			]
		}
	]
}